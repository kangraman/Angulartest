{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../auth.service\";\nimport * as i5 from \"../services/user.service\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(router, http, formBuilder, authService, userService) {\n      this.router = router;\n      this.http = http;\n      this.formBuilder = formBuilder;\n      this.authService = authService;\n      this.userService = userService;\n      this.isAuthenticated = false;\n      this.isPasswordVisible = false;\n      this.loginForm = this.formBuilder.group({\n        password: ['']\n      });\n    }\n    ngOnInit() {\n      this.login = new FormGroup({\n        'fname': new FormControl(),\n        'password': new FormControl()\n      });\n    }\n    logindata() {\n      this.http.get('http://localhost:3000/signup').subscribe(res => {\n        const user = res.find(a => a.fname === this.login.value.fname && a.password === this.login.value.password);\n        if (user) {\n          this.authService.login(user);\n          // Use Angular Router to navigate based on user role\n          if (this.authService.isAdmin()) {\n            this.userService.setUser(user);\n            this.router.navigate(['seller-home']);\n          } else {\n            this.userService.setUser(user);\n            this.router.navigate(['Home']);\n          }\n        } else {\n          alert('User not found');\n        }\n      }, err => {\n        alert('Something Went Wrong');\n        this.router.navigate(['login']);\n      });\n    }\n    isAuthenticatedUser() {\n      return this.isAuthenticated;\n    }\n    togglePasswordVisibility() {\n      this.isPasswordVisible = !this.isPasswordVisible;\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.UserService));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 27,\n    vars: 2,\n    consts: [[\"notificationContainer\", \"\"], [1, \"container\"], [1, \"form-box\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"fname\", \"placeholder\", \"Enter Username\", 1, \"form-control\", \"mb-3\", \"mt-3\"], [\"formControlName\", \"password\", \"placeholder\", \"Enter Password\", 1, \"form-control\", \"mb-3\", \"mt-3\", 3, \"type\"], [\"type\", \"checkbox\", 3, \"change\"], [\"routerLink\", \"/signup\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 2, \"width\", \"100%\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", null, 0);\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.logindata();\n        });\n        i0.ɵɵelementStart(4, \"h3\");\n        i0.ɵɵtext(5, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\");\n        i0.ɵɵtext(8, \"User Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\");\n        i0.ɵɵtext(12, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 3)(15, \"input\", 6);\n        i0.ɵɵlistener(\"change\", function LoginComponent_Template_input_change_15_listener() {\n          return ctx.togglePasswordVisibility();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"label\");\n        i0.ɵɵtext(17, \"Show Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(18, \"br\");\n        i0.ɵɵelementStart(19, \"span\");\n        i0.ɵɵtext(20, \"Create New Account \");\n        i0.ɵɵelementStart(21, \"a\", 7);\n        i0.ɵɵtext(22, \"Singup\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(23, \"br\");\n        i0.ɵɵelementStart(24, \"button\", 8);\n        i0.ɵɵtext(25, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(26, \"router-outlet\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.login);\n        i0.ɵɵadvance(10);\n        i0.ɵɵpropertyInterpolate(\"type\", ctx.isPasswordVisible ? \"text\" : \"password\");\n      }\n    },\n    dependencies: [i1.RouterOutlet, i1.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\".notification[_ngcontent-%COMP%] {\\n  position: fixed;\\n  bottom: 20px;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  background-color: #f44336;\\n  color: #fff;\\n  padding: 10px 20px;\\n  border-radius: 4px;\\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\\n  z-index: 999;\\n  animation: _ngcontent-%COMP%_fade-in-out 0.5s ease;\\n}\\n\\n@keyframes _ngcontent-%COMP%_fade-in-out {\\n  0%, 100% {\\n    opacity: 0;\\n  }\\n  10%, 90% {\\n    opacity: 1;\\n  }\\n}\\n    .form-box[_ngcontent-%COMP%]{\\n        width:400px;\\n        height: 400px;\\n        padding:25px ;\\n        background-color:antiquewhite ;\\n        position: absolute;\\n        transform:translate(-50%,-50%) ;\\n        left: 50%;\\n        top: 50%;\\n        z-index:1 ;\\n\\n    }\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}