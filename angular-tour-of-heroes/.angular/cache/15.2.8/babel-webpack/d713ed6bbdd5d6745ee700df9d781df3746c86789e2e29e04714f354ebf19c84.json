{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let SellerService = /*#__PURE__*/(() => {\n  class SellerService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.isSellerLoggedIn = new BehaviorSubject(false);\n    }\n    userSignUp(data) {\n      debugger;\n      this.http.post('http://localhost:3000/seller', data, {\n        observe: 'response'\n      }).subscribe(result => {\n        this.isSellerLoggedIn.next(true);\n        localStorage.setItem('seller', JSON.stringify(result.body));\n        this.router.navigate(['seller-home']);\n      });\n      return false;\n    }\n    reloadSeller() {\n      if (localStorage.getItem('seller')) {\n        this.isSellerLoggedIn.next(true);\n        this.router.navigate(['seller-home']);\n      }\n    }\n    userLogin(data) {\n      console.warn(data);\n      const email = data.email;\n      const password = data.password;\n      this.http.get(`http://localhost:3000/seller?email=${email}&password=${password}`, {\n        observe: 'response'\n      }).subscribe(result => {\n        console.warn(result);\n        if (result && result.body && result.body.length) {\n          console.warn('LOGGED IN');\n          localStorage.setItem('seller', JSON.stringify(result.body));\n          this.router.navigate(['seller-home']);\n        } else {\n          console.warn('LoginFailed');\n        }\n      });\n    }\n  }\n  SellerService.ɵfac = function SellerService_Factory(t) {\n    return new (t || SellerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  SellerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SellerService,\n    factory: SellerService.ɵfac,\n    providedIn: 'root'\n  });\n  return SellerService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}